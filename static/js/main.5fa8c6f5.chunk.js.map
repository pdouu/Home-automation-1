{"version":3,"sources":["components/sidebar-button/SidebarButton.jsx","components/sidebar/Sidebar.jsx","pages/homepage/HomePage.jsx","firebase.js","pages/nodemcu-charts/chart-info/LineChart.jsx","pages/nodemcu-charts/chart-info/ChartInfo.jsx","pages/nodemcu-charts/chart-button/ChartButton.jsx","assets/assets.js","pages/nodemcu-charts/NodemcuCharts.jsx","pages/nodemcu-controls/control-button/ControlButton.jsx","pages/nodemcu-controls/control-info/ControlInfo.jsx","pages/nodemcu-controls/NodemcuControls.jsx","App.js","index.js"],"names":["SidebarButton","children","selected","otherProps","className","withRouter","history","selectedButton","onClick","push","process","href","target","rel","HomePage","setLastDate","lastDate","Date","database","ref","set","toString","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","LineChart","datasetProp","useState","data","labels","datasets","options","scales","yAxes","ticks","beginAtZero","chartData","setchartData","useEffect","ChartInfo","unit","dataColor","dataAvg","dataLast","dataLastFive","dataMax","dataMin","dataCalculated","setDataCalculated","sensorData","reduce","total","val","length","toFixed","slice","Math","max","min","getDataInfos","label","fill","backgroundColor","borderColor","ChartButton","title","icon","style","backgroundImage","imageAsset","lamp","lampColored","fan","fanColored","smoke","temperature","humidity","NodemcuCharts","buttonVal","firebaseVal","setSelectedButton","setSensorData","latestValRef","on","snapshot","valueKeys","Object","keys","map","key","off","ControlButton","status","ControlInfo","infoValue","infoName","infoUnit","minVal","maxVal","valueLimit","setValueLimit","lastVal","setLastVal","NodemcuControls","buttonStatus","setButtonStatus","handleClick","buttonRef","controlsRef","lamba","klima","location","pathname","replace","exact","path","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5fa8c6f5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./SidebarButton-style.scss\";\r\n\r\nconst SidebarButton = ({ children, selected, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`\r\n      ${selected ? \"selected-button\" : \"\"}\r\n      sidebar-button\r\n      `}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SidebarButton;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarButton from \"../sidebar-button/SidebarButton\";\r\n\r\nimport \"./Sidebar-style.scss\";\r\nconst Sidebar = ({ history, selectedButton }) => {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar-header\">\r\n        <div className=\"nodemcu-image\" />\r\n        <h1 className=\"nodemcu-title\">NODEMCU ARAYUZ</h1>\r\n      </div>\r\n      <div className=\"route-buttons-container\">\r\n        <SidebarButton\r\n          onClick={() => {\r\n            history.push(process.env.PUBLIC_URL + \"/\");\r\n          }}\r\n          selected={!selectedButton ? true : false}\r\n        >\r\n          Anasayfa\r\n        </SidebarButton>\r\n        <SidebarButton\r\n          onClick={() => {\r\n            history.push(process.env.PUBLIC_URL + \"/kontroller\");\r\n          }}\r\n          selected={selectedButton === \"kontroller\" ? true : false}\r\n        >\r\n          Kontroller\r\n        </SidebarButton>\r\n        <SidebarButton\r\n          onClick={() => {\r\n            history.push(process.env.PUBLIC_URL + \"/grafikler\");\r\n          }}\r\n          selected={selectedButton === \"grafikler\" ? true : false}\r\n        >\r\n          Grafikler\r\n        </SidebarButton>\r\n      </div>\r\n      <div className=\"sidebar-links-container\">\r\n        <a\r\n          className=\"github-link\"\r\n          href=\"https://github.com/akdagosman/Home-automation/tree/client-refactor\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {\"\"}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import React from \"react\";\r\nimport \"./HomePage-style.scss\";\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <h1 className=\"page-title\">NODEMCU AKILLI EV PROTOTIPI</h1>\r\n\r\n      <div className=\"homepage-text\">\r\n        <h2 className=\"first-h2\">NodeMCU Nedir?</h2>\r\n        <p className=\"firs-par\">\r\n          NodeMCU; kredi kartının yarısı boyutunda, ufak bir elektronik devre\r\n          kartıdır. Açık kaynak kodlu bir kontrol ünitesidir, maliyeti oldukça\r\n          düşüktür ve yeteneklidir. Geniş bir kullanım alanına sahip olan ünite;\r\n          “IOT” nesnelerin interneti olarak adlandırdığımız alanda kullanılarak\r\n          birçok sorunun çözülmesini sağlamayı amaçlar.\r\n        </p>\r\n        <h2 className=\"second-h2\">Proje Hakkında</h2>\r\n        <p className=\"second-par\">\r\n          Bu projede NodeMCU kullanılarak çeşitli cihazlar kontrol edilmeye\r\n          çalışılmıştır. Çeşitli sensörlerden gelen bilgiler grafikler ile\r\n          değerlendirilmiştir. İlgili bölümlere sol menüden ulaşabilirsiniz.\r\n          Proje kodlarına ise yine menüdeki github butonundan ulaşabilirsiniz.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB_-z0OZRP9yvI6di7hjMpIg31sggBdh_g\",\r\n  authDomain: \"ev-otomasyon-f0c18.firebaseapp.com\",\r\n  databaseURL: \"https://ev-otomasyon-f0c18.firebaseio.com\",\r\n  projectId: \"ev-otomasyon-f0c18\",\r\n  storageBucket: \"ev-otomasyon-f0c18.appspot.com\",\r\n  messagingSenderId: \"583999887802\",\r\n  appId: \"1:583999887802:web:5a8daba2635c5cf31f6583\",\r\n  measurementId: \"G-V0W0TDG3GS\",\r\n};\r\nexport const setLastDate = () => {\r\n  const lastDate = new Date();\r\n  database.ref(\"/lastUsed\").set(lastDate.toString());\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ datasetProp }) => {\r\n  const [chartData, setchartData] = useState({\r\n    data: {\r\n      labels: [\"2s\", \"4s\", \"6s\", \"8s\", \"10s\"],\r\n      datasets: [],\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setchartData({\r\n      ...chartData,\r\n      data: { ...chartData.data, datasets: [...datasetProp] },\r\n    });\r\n  }, [datasetProp]);\r\n\r\n  return <Line data={chartData.data} options={chartData.options} />;\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\nimport \"./ChartInfo-style.scss\";\r\n\r\nconst ChartInfo = ({ data, unit, dataColor }) => {\r\n  const [dataCalculated, setDataCalculated] = useState({\r\n    dataAvg: 0,\r\n    dataLast: 0,\r\n    dataLastFive: [],\r\n    dataMax: 0,\r\n    dataMin: 0,\r\n  });\r\n\r\n  const getDataInfos = (sensorData) => {\r\n    const dataAvg = (\r\n      sensorData.reduce((total, val) => total + val, 0) / sensorData.length\r\n    ).toFixed(2);\r\n    const dataLastFive = sensorData.slice(Math.max(sensorData.length - 5, 0));\r\n\r\n    setDataCalculated({\r\n      dataLastFive,\r\n      dataAvg,\r\n      dataLast: sensorData[sensorData.length - 1],\r\n      dataMin: Math.min(...sensorData),\r\n      dataMax: Math.max(...sensorData),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataInfos(data);\r\n  }, [data]);\r\n\r\n  const { dataAvg, dataLast, dataLastFive, dataMax, dataMin } = dataCalculated;\r\n  return (\r\n    <div className=\"chart-infos\">\r\n      <div className=\"info-header\">\r\n        <span className=\"latest-value\">Değer: {dataLast + unit}</span>\r\n        <span className=\"max-value\">En Yüksek: {dataMax + unit}</span>\r\n        <span className=\"min-value\">En Düşük: {dataMin + unit}</span>\r\n        <span className=\"average-value\">Ortalama: {dataAvg + unit}</span>\r\n      </div>\r\n      <div className=\"info-chart\">\r\n        <LineChart\r\n          datasetProp={[\r\n            {\r\n              label: \"Son 10 Saniye İçerisindeki Değerler\",\r\n              data: [...dataLastFive],\r\n              fill: true,\r\n              backgroundColor: dataColor,\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartInfo;\r\n","import React from \"react\";\r\nimport \"./ChartButton-style.scss\";\r\n\r\nconst ChartButton = ({ title, icon, selected, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`chart-button-container ${selected ? \"selected-button\" : \"\"}`}\r\n      {...otherProps}\r\n    >\r\n      <h2 className=\"button-title\">{title}</h2>\r\n      <div\r\n        className=\"button-icon\"\r\n        style={{ backgroundImage: `url(${icon})` }}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChartButton;\r\n","const imageAsset = {\r\n  lamp:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Flamp.svg?alt=media&token=2201ef9d-8e21-49ce-92b2-4335db9ef0cb\",\r\n  lampColored:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Flamp-colored.svg?alt=media&token=d53c620f-dc96-4028-a4e2-a337dd48bd0c\",\r\n  fan:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Ffan.svg?alt=media&token=30ba68dc-1f59-47ac-abbf-859b050bf808\",\r\n  fanColored:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Ffan-colored.svg?alt=media&token=2a158ffa-c172-457b-b230-ff939794cf03\",\r\n  smoke:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Fcigarrete.svg?alt=media&token=ef3bee50-df29-4d03-935f-eee876618bf8\",\r\n  temperature:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Fthermometer.svg?alt=media&token=97feefe2-8711-4dbf-9878-4649a81127c4\",\r\n  humidity:\r\n    \"https://firebasestorage.googleapis.com/v0/b/ev-otomasyon-f0c18.appspot.com/o/assets%2Fwater-drop.svg?alt=media&token=920e0c85-13ae-41e8-b682-9ebabd7c8e09\",\r\n};\r\n\r\nexport default imageAsset;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { database, setLastDate } from \"../../firebase.js\";\r\n\r\nimport ChartInfo from \"./chart-info/ChartInfo\";\r\nimport ChartButton from \"./chart-button/ChartButton\";\r\n\r\nimport \"./NodemcuCharts-style.scss\";\r\nimport imageAsset from \"../../assets/assets\";\r\n\r\nconst NodemcuCharts = () => {\r\n  const [selectedButton, setSelectedButton] = useState({\r\n    buttonVal: \"temperature\",\r\n    firebaseVal: \"sicaklik\",\r\n    unit: \"°\",\r\n    dataColor: \"rgb(255, 99, 71)\",\r\n  });\r\n  const [sensorData, setSensorData] = useState([]);\r\n\r\n  const { humidity, temperature, smoke } = imageAsset;\r\n  const { buttonVal, firebaseVal, unit, dataColor } = selectedButton;\r\n\r\n  useEffect(() => {\r\n    const latestValRef = database.ref(`${firebaseVal}/deger`);\r\n    latestValRef.on(\"value\", (snapshot) => {\r\n      const valueKeys = Object.keys(snapshot.val());\r\n      setSensorData([...valueKeys.map((key) => snapshot.val()[key])]);\r\n      setLastDate();\r\n    });\r\n\r\n    return () => {\r\n      latestValRef.off();\r\n    };\r\n  }, [firebaseVal]);\r\n\r\n  return (\r\n    <div className=\"charts-content-container\">\r\n      <h1 className=\"page-title\">GRAFIKLER</h1>\r\n      <div className=\"charts-container\">\r\n        <div className=\"chart-buttons-container\">\r\n          <ChartButton\r\n            title=\"Sıcaklık\"\r\n            icon={temperature}\r\n            selected={buttonVal === \"temperature\"}\r\n            onClick={() =>\r\n              setSelectedButton({\r\n                buttonVal: \"temperature\",\r\n                firebaseVal: \"sicaklik\",\r\n                unit: \"°\",\r\n                dataColor: \"rgb(255, 99, 71,1)\",\r\n              })\r\n            }\r\n          />\r\n          <ChartButton\r\n            title=\"Nem\"\r\n            icon={humidity}\r\n            selected={buttonVal === \"humidity\"}\r\n            onClick={() =>\r\n              setSelectedButton({\r\n                buttonVal: \"humidity\",\r\n                firebaseVal: \"nem\",\r\n                unit: \"%\",\r\n                dataColor: \"rgb(106, 90, 205,1)\",\r\n              })\r\n            }\r\n          />\r\n          <ChartButton\r\n            title=\"Duman\"\r\n            icon={smoke}\r\n            selected={buttonVal === \"smoke\"}\r\n            onClick={() =>\r\n              setSelectedButton({\r\n                buttonVal: \"smoke\",\r\n                firebaseVal: \"gaz\",\r\n                unit: \"ppm\",\r\n                dataColor: \"rgb(255, 165, 0,1)\",\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"chart-info-container\">\r\n          <ChartInfo data={sensorData} unit={unit} dataColor={dataColor} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodemcuCharts;\r\n","import React from \"react\";\r\nimport \"./ControlButton-style.scss\";\r\n\r\nconst ControlButton = ({ title, icon, status, ...otherProps }) => {\r\n  return (\r\n    <button className=\"control-button-container\" {...otherProps}>\r\n      <h2 className=\"button-title\">{title}</h2>\r\n      <div\r\n        className=\"button-icon\"\r\n        style={{ backgroundImage: `url(${icon})` }}\r\n      />\r\n      <div\r\n        className={`status-container ${\r\n          status ? \"status-open\" : \"status-closed\"\r\n        }`}\r\n      >\r\n        <h2>{status ? \"Açık\" : \"Kapalı\"}</h2>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ControlButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { database, setLastDate } from \"../../../firebase\";\r\n\r\nimport \"./ControlInfo-style.scss\";\r\n\r\nconst ControlInfo = ({ infoValue, infoName, infoUnit, minVal, maxVal }) => {\r\n  const [valueLimit, setValueLimit] = useState(\"low\");\r\n  const [lastVal, setLastVal] = useState(0);\r\n\r\n  const valueCalculator = () => {\r\n    if (lastVal <= minVal) return \"low\";\r\n    else if (lastVal >= maxVal) return \"max\";\r\n    else return \"mid\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const latestValRef = database.ref(`${infoValue}/deger`);\r\n    latestValRef.on(\"value\", (snapshot) => {\r\n      const valueKeys = Object.keys(snapshot.val());\r\n\r\n      setLastVal(snapshot.val()[valueKeys[valueKeys.length - 1]]);\r\n      setLastDate();\r\n    });\r\n\r\n    setValueLimit(valueCalculator());\r\n\r\n    return () => {\r\n      latestValRef.off();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"info-box-container\">\r\n      <span className={`info-value ${valueLimit}`}>\r\n        {lastVal}\r\n        <span className={`info-unit ${infoName}`}>{infoUnit}</span>\r\n      </span>\r\n\r\n      <span className=\"info-name\">{infoName}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default ControlInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { database, setLastDate } from \"../../firebase\";\r\n\r\nimport ControlButton from \"./control-button/ControlButton\";\r\nimport ControlInfo from \"./control-info/ControlInfo\";\r\n\r\nimport imageAsset from \"../../assets/assets\";\r\nimport \"./NodemcuControls-style.scss\";\r\n\r\nconst NodemcuControls = () => {\r\n  const { lamp, lampColored, fan, fanColored } = imageAsset;\r\n  const [buttonStatus, setButtonStatus] = useState({ lamp: 0, fan: 0 });\r\n\r\n  //Setting button status ON/OFF\r\n  const handleClick = (buttonRef) => {\r\n    database\r\n      .ref(`/${buttonRef === \"lamp\" ? \"lamba\" : \"klima\"}`)\r\n      .set(!buttonStatus[buttonRef]);\r\n    setLastDate();\r\n  };\r\n\r\n  //Getting control buttons info from firebase on mount.\r\n  useEffect(() => {\r\n    const controlsRef = database.ref(`/`);\r\n\r\n    controlsRef.on(\"value\", (snapshot) => {\r\n      const { lamba, klima } = snapshot.val();\r\n\r\n      setButtonStatus({ lamp: lamba, fan: klima });\r\n    });\r\n\r\n    return () => {\r\n      controlsRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"controls-content-container\">\r\n      <h1 className=\"page-title\">KONTROLLER</h1>\r\n      <div className=\"controls-container\">\r\n        <ControlButton\r\n          onClick={() => handleClick(\"lamp\")}\r\n          title=\"LEDLER\"\r\n          icon={buttonStatus.lamp ? lampColored : lamp}\r\n          status={buttonStatus.lamp}\r\n        />\r\n        <ControlButton\r\n          onClick={() => handleClick(\"fan\")}\r\n          title=\"FANLAR\"\r\n          icon={buttonStatus.fan ? fanColored : fan}\r\n          status={buttonStatus.fan}\r\n        />\r\n      </div>\r\n      <div className=\"info-container\">\r\n        <ControlInfo\r\n          infoName=\"Sıcaklık\"\r\n          infoValue=\"sicaklik\"\r\n          infoUnit=\"°\"\r\n          minVal={10}\r\n          maxVal={35}\r\n        />\r\n        <ControlInfo\r\n          infoName=\"Nem\"\r\n          infoValue=\"nem\"\r\n          infoUnit=\"%\"\r\n          minVal={50}\r\n          maxVal={80}\r\n        />\r\n        <ControlInfo\r\n          infoName=\"Duman\"\r\n          infoValue=\"gaz\"\r\n          infoUnit=\"ppm\"\r\n          minVal={200}\r\n          maxVal={250}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodemcuControls;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nimport \"./App.scss\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport HomePage from \"./pages/homepage/HomePage\";\r\nimport NodemcuCharts from \"./pages/nodemcu-charts/NodemcuCharts\";\r\nimport NodemcuControls from \"./pages/nodemcu-controls/NodemcuControls\";\r\n\r\nconst App = ({ history }) => {\r\n  const [selectedButton, setSelectedButton] = useState(\"\");\r\n  //Getting which button selected from sidebar\r\n  useEffect(() => {\r\n    //Getting pathname and setting button that selected\r\n    setSelectedButton(\r\n      history.location.pathname.replace(process.env.PUBLIC_URL, \"\").slice(1)\r\n    );\r\n  }, [history.location.pathname]);\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Sidebar selectedButton={selectedButton} />\r\n      <div className=\"app-content-container\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\"}\r\n            render={() => {\r\n              return <HomePage />;\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/kontroller\"}\r\n            render={() => {\r\n              return <NodemcuControls />;\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/grafikler\"}\r\n            render={() => {\r\n              return <NodemcuCharts />;\r\n            }}\r\n          />\r\n          <Route\r\n            render={() => <Redirect to={process.env.PUBLIC_URL + \"/\"} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
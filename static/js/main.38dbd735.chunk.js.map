{"version":3,"sources":["components/sidebar-button/SidebarButton.jsx","assets/esp8266_nodemcu.png","components/sidebar/Sidebar.jsx","pages/homepage/HomePage.jsx","firebase.js","pages/nodemcu-charts/chart-info/LineChart.jsx","pages/nodemcu-charts/chart-info/ChartInfo.jsx","pages/nodemcu-charts/chart-button/ChartButton.jsx","assets/lamp.svg","assets/lamp-colored.svg","assets/fan.svg","assets/fan-colored.svg","assets/cigarrete.svg","assets/water-drop.svg","assets/thermometer.svg","pages/nodemcu-charts/NodemcuCharts.jsx","pages/nodemcu-controls/control-button/ControlButton.jsx","pages/nodemcu-controls/control-info/ControlInfo.jsx","pages/nodemcu-controls/NodemcuControls.jsx","App.js","index.js"],"names":["SidebarButton","children","selected","otherProps","className","withRouter","history","selectedButton","src","nodemcuImage","alt","onClick","push","process","href","target","rel","HomePage","setLastDate","lastDate","Date","toString","database","ref","set","time","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","LineChart","datasetProp","useState","data","labels","datasets","options","scales","yAxes","ticks","beginAtZero","chartData","setchartData","useEffect","ChartInfo","unit","dataColor","dataAvg","dataLast","dataLastFive","dataMax","dataMin","dataCalculated","setDataCalculated","sensorData","reduce","total","val","length","toFixed","slice","Math","max","min","getDataInfos","label","fill","backgroundColor","borderColor","ChartButton","title","icon","style","backgroundImage","NodemcuCharts","buttonVal","firebaseVal","setSelectedButton","setSensorData","latestValRef","on","snapshot","valueKeys","Object","keys","map","key","off","temperature","humidity","smoke","ControlButton","status","ControlInfo","infoValue","infoName","infoUnit","minVal","maxVal","valueLimit","setValueLimit","lastVal","setLastVal","NodemcuControls","lamp","fan","buttonStatus","setButtonStatus","handleClick","buttonRef","controlsRef","lamba","klima","lampColored","fanColored","location","pathname","replace","exact","path","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.38dbd735.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./SidebarButton-style.scss\";\r\n\r\nconst SidebarButton = ({ children, selected, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`\r\n      ${selected ? \"selected-button\" : \"\"}\r\n      sidebar-button\r\n      `}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SidebarButton;\r\n","export default __webpack_public_path__ + \"static/media/esp8266_nodemcu.35237f25.png\";","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarButton from \"../sidebar-button/SidebarButton\";\r\nimport nodemcuImage from \"../../assets/esp8266_nodemcu.png\";\r\n\r\nimport \"./Sidebar-style.scss\";\r\nconst Sidebar = ({ history, selectedButton }) => {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar-header\">\r\n        <img\r\n          src={nodemcuImage}\r\n          alt=\"nodemcu\"\r\n          className=\"nodemcu-image-sidebar\"\r\n        />\r\n        <h1 className=\"nodemcu-title\">NodeMCU Web</h1>\r\n      </div>\r\n      <div className=\"route-buttons-container\">\r\n        <SidebarButton\r\n          onClick={() => {\r\n            history.push(process.env.PUBLIC_URL + \"/\");\r\n          }}\r\n          selected={!selectedButton ? true : false}\r\n        >\r\n          Home\r\n        </SidebarButton>\r\n        <SidebarButton\r\n          onClick={() => {\r\n            history.push(process.env.PUBLIC_URL + \"/kontroller\");\r\n          }}\r\n          selected={selectedButton === \"kontroller\" ? true : false}\r\n        >\r\n          Controls\r\n        </SidebarButton>\r\n        <SidebarButton\r\n          onClick={() => {\r\n            history.push(process.env.PUBLIC_URL + \"/grafikler\");\r\n          }}\r\n          selected={selectedButton === \"grafikler\" ? true : false}\r\n        >\r\n          Charts\r\n        </SidebarButton>\r\n      </div>\r\n      <div className=\"sidebar-links-container\">\r\n        <a\r\n          className=\"github-link\"\r\n          href=\"https://github.com/yusufcmlt/nodemcu-home-project\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {\"\"}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import React from \"react\";\r\nimport \"./HomePage-style.scss\";\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <h1 className=\"page-title\">NodeMCU Smart Home Prototype Web UI</h1>\r\n      <div className=\"homepage-text\">\r\n        <h2>What is NodeMCU?</h2>\r\n        <p>\r\n          The NodeMCU (Node MicroController Unit) is an open-source software and\r\n          hardware development environment built around an inexpensive\r\n          System-on-a-Chip (SoC) called the ESP8266. The ESP8266, designed and\r\n          manufactured by Espressif Systems, contains the crucial elements of a\r\n          computer: CPU, RAM, networking (WiFi), and even a modern operating\r\n          system and SDK. That makes it an excellent choice for the Internet of\r\n          Things (IoT) projects of all kinds.\r\n        </p>\r\n        <h2>About This Project</h2>\r\n        <p>\r\n          In this project, we tried to control various devices, gather and\r\n          visualize sensor informations using NodeMCU, React and Firebase. You\r\n          can use menu to access relevant pages and Github logo for project's\r\n          source.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB_-z0OZRP9yvI6di7hjMpIg31sggBdh_g\",\r\n  authDomain: \"ev-otomasyon-f0c18.firebaseapp.com\",\r\n  databaseURL: \"https://ev-otomasyon-f0c18.firebaseio.com\",\r\n  projectId: \"ev-otomasyon-f0c18\",\r\n  storageBucket: \"ev-otomasyon-f0c18.appspot.com\",\r\n  messagingSenderId: \"583999887802\",\r\n  appId: \"1:583999887802:web:5a8daba2635c5cf31f6583\",\r\n  measurementId: \"G-V0W0TDG3GS\",\r\n};\r\nexport const setLastDate = () => {\r\n  const lastDate = new Date().toString();\r\n\r\n  database.ref(\"/lastUsed\").set({ time: lastDate });\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ datasetProp }) => {\r\n  const [chartData, setchartData] = useState({\r\n    data: {\r\n      labels: [\"2s\", \"4s\", \"6s\", \"8s\", \"10s\"],\r\n      datasets: [],\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setchartData({\r\n      ...chartData,\r\n      data: { ...chartData.data, datasets: [...datasetProp] },\r\n    });\r\n  }, [datasetProp]);\r\n\r\n  return <Line data={chartData.data} options={chartData.options} />;\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\nimport \"./ChartInfo-style.scss\";\r\n\r\nconst ChartInfo = ({ data, unit, dataColor }) => {\r\n  const [dataCalculated, setDataCalculated] = useState({\r\n    dataAvg: 0,\r\n    dataLast: 0,\r\n    dataLastFive: [],\r\n    dataMax: 0,\r\n    dataMin: 0,\r\n  });\r\n\r\n  const getDataInfos = (sensorData) => {\r\n    const dataAvg = (\r\n      sensorData.reduce((total, val) => total + val, 0) / sensorData.length\r\n    ).toFixed(2);\r\n    const dataLastFive = sensorData.slice(Math.max(sensorData.length - 5, 0));\r\n\r\n    setDataCalculated({\r\n      dataLastFive,\r\n      dataAvg,\r\n      dataLast: sensorData[sensorData.length - 1],\r\n      dataMin: Math.min(...sensorData),\r\n      dataMax: Math.max(...sensorData),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataInfos(data);\r\n  }, [data]);\r\n\r\n  const { dataAvg, dataLast, dataLastFive, dataMax, dataMin } = dataCalculated;\r\n  return (\r\n    <div className=\"chart-infos\">\r\n      <div className=\"info-header\">\r\n        <span className=\"latest-value\">Value: {dataLast + unit}</span>\r\n        <span className=\"max-value\">Max: {dataMax + unit}</span>\r\n        <span className=\"min-value\">Min: {dataMin + unit}</span>\r\n        <span className=\"average-value\">Average: {dataAvg + unit}</span>\r\n      </div>\r\n      <div className=\"info-chart\">\r\n        <LineChart\r\n          datasetProp={[\r\n            {\r\n              label: \"Last 5 Value (in 10 seconds)\",\r\n              data: [...dataLastFive],\r\n              fill: true,\r\n              backgroundColor: dataColor,\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartInfo;\r\n","import React from \"react\";\r\nimport \"./ChartButton-style.scss\";\r\n\r\nconst ChartButton = ({ title, icon, selected, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`chart-button-container ${selected ? \"selected-button\" : \"\"}`}\r\n      {...otherProps}\r\n    >\r\n      <h2 className=\"button-title\">{title}</h2>\r\n      <div\r\n        className=\"button-icon\"\r\n        style={{ backgroundImage: `url(${icon})` }}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChartButton;\r\n","export default __webpack_public_path__ + \"static/media/lamp.909d2ca0.svg\";","export default __webpack_public_path__ + \"static/media/lamp-colored.d67991f2.svg\";","export default __webpack_public_path__ + \"static/media/fan.7484ad07.svg\";","export default __webpack_public_path__ + \"static/media/fan-colored.56cd5ecd.svg\";","export default __webpack_public_path__ + \"static/media/cigarrete.d99980ca.svg\";","export default __webpack_public_path__ + \"static/media/water-drop.0ad2cf65.svg\";","export default __webpack_public_path__ + \"static/media/thermometer.724e6e34.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { database, setLastDate } from \"../../firebase.js\";\r\n\r\nimport ChartInfo from \"./chart-info/ChartInfo\";\r\nimport ChartButton from \"./chart-button/ChartButton\";\r\n\r\nimport \"./NodemcuCharts-style.scss\";\r\nimport { smoke, humidity, temperature } from \"../../assets/assets\";\r\n\r\nconst NodemcuCharts = () => {\r\n  const [selectedButton, setSelectedButton] = useState({\r\n    buttonVal: \"temperature\",\r\n    firebaseVal: \"sicaklik\",\r\n    unit: \"°\",\r\n    dataColor: \"rgb(255, 99, 71)\",\r\n  });\r\n  const [sensorData, setSensorData] = useState([]);\r\n\r\n  const { buttonVal, firebaseVal, unit, dataColor } = selectedButton;\r\n\r\n  useEffect(() => {\r\n    const latestValRef = database.ref(`${firebaseVal}/deger`);\r\n    latestValRef.on(\"value\", (snapshot) => {\r\n      const valueKeys = Object.keys(snapshot.val());\r\n      setSensorData([...valueKeys.map((key) => snapshot.val()[key])]);\r\n      setLastDate();\r\n    });\r\n\r\n    return () => {\r\n      latestValRef.off();\r\n    };\r\n  }, [firebaseVal]);\r\n\r\n  return (\r\n    <div className=\"charts-content-container\">\r\n      <h1 className=\"page-title\">GRAFIKLER</h1>\r\n      <div className=\"charts-container\">\r\n        <div className=\"chart-buttons-container\">\r\n          <ChartButton\r\n            title=\"Temperature\"\r\n            icon={temperature}\r\n            selected={buttonVal === \"temperature\"}\r\n            onClick={() =>\r\n              setSelectedButton({\r\n                buttonVal: \"temperature\",\r\n                firebaseVal: \"sicaklik\",\r\n                unit: \"°\",\r\n                dataColor: \"rgb(255, 99, 71,1)\",\r\n              })\r\n            }\r\n          />\r\n          <ChartButton\r\n            title=\"Humidity\"\r\n            icon={humidity}\r\n            selected={buttonVal === \"humidity\"}\r\n            onClick={() =>\r\n              setSelectedButton({\r\n                buttonVal: \"humidity\",\r\n                firebaseVal: \"nem\",\r\n                unit: \"%\",\r\n                dataColor: \"rgb(106, 90, 205,1)\",\r\n              })\r\n            }\r\n          />\r\n          <ChartButton\r\n            title=\"Smoke\"\r\n            icon={smoke}\r\n            selected={buttonVal === \"smoke\"}\r\n            onClick={() =>\r\n              setSelectedButton({\r\n                buttonVal: \"smoke\",\r\n                firebaseVal: \"gaz\",\r\n                unit: \"ppm\",\r\n                dataColor: \"rgb(75, 240, 227,1)\",\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"chart-info-container\">\r\n          <ChartInfo data={sensorData} unit={unit} dataColor={dataColor} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodemcuCharts;\r\n","import React from \"react\";\r\nimport \"./ControlButton-style.scss\";\r\n\r\nconst ControlButton = ({ title, icon, status, ...otherProps }) => {\r\n  return (\r\n    <button className=\"control-button-container\" {...otherProps}>\r\n      <h2 className=\"button-title\">{title}</h2>\r\n      <div\r\n        className=\"button-icon\"\r\n        style={{ backgroundImage: `url(${icon})` }}\r\n      />\r\n      <div\r\n        className={`status-container ${\r\n          status ? \"status-open\" : \"status-closed\"\r\n        }`}\r\n      >\r\n        <h2 className=\"button-title\">{status ? \"On\" : \"Off\"}</h2>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ControlButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { database, setLastDate } from \"../../../firebase\";\r\n\r\nimport \"./ControlInfo-style.scss\";\r\n\r\nconst ControlInfo = ({\r\n  infoValue,\r\n  infoName,\r\n  infoUnit,\r\n  minVal,\r\n  maxVal,\r\n  icon,\r\n}) => {\r\n  const [valueLimit, setValueLimit] = useState(\"low\");\r\n  const [lastVal, setLastVal] = useState(0);\r\n\r\n  const valueCalculator = () => {\r\n    if (lastVal <= minVal) return \"low\";\r\n    else if (lastVal >= maxVal) return \"max\";\r\n    else return \"mid\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const latestValRef = database.ref(`${infoValue}/deger`);\r\n    latestValRef.on(\"value\", (snapshot) => {\r\n      const valueKeys = Object.keys(snapshot.val());\r\n\r\n      setLastVal(snapshot.val()[valueKeys[valueKeys.length - 1]]);\r\n      setLastDate();\r\n    });\r\n\r\n    setValueLimit(valueCalculator());\r\n\r\n    return () => {\r\n      latestValRef.off();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"info-box-container\">\r\n      <span className={`info-value ${valueLimit}`}>\r\n        {lastVal}\r\n        <span className={`info-unit ${infoName}`}>{infoUnit}</span>\r\n      </span>\r\n      <i className=\"info-icon\" style={{ backgroundImage: `url(${icon})` }} />\r\n      <span className=\"info-name\">{infoName}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default ControlInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { database, setLastDate } from \"../../firebase\";\r\n\r\nimport ControlButton from \"./control-button/ControlButton\";\r\nimport ControlInfo from \"./control-info/ControlInfo\";\r\n\r\nimport {\r\n  lamp,\r\n  lampColored,\r\n  fan,\r\n  fanColored,\r\n  smoke,\r\n  humidity,\r\n  temperature,\r\n} from \"../../assets/assets\";\r\nimport \"./NodemcuControls-style.scss\";\r\n\r\nconst NodemcuControls = () => {\r\n  const [buttonStatus, setButtonStatus] = useState({ lamp: 0, fan: 0 });\r\n\r\n  //Setting button status ON/OFF\r\n  const handleClick = (buttonRef) => {\r\n    database\r\n      .ref(`/${buttonRef === \"lamp\" ? \"lamba\" : \"klima\"}`)\r\n      .set(!buttonStatus[buttonRef]);\r\n    setLastDate();\r\n  };\r\n\r\n  //Getting control buttons info from firebase on mount.\r\n  useEffect(() => {\r\n    const controlsRef = database.ref(`/`);\r\n\r\n    controlsRef.on(\"value\", (snapshot) => {\r\n      const { lamba, klima } = snapshot.val();\r\n\r\n      setButtonStatus({ lamp: lamba, fan: klima });\r\n    });\r\n\r\n    return () => {\r\n      controlsRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"controls-content-container\">\r\n      <h1 className=\"page-title\">Controls</h1>\r\n      <div className=\"controls-container\">\r\n        <ControlButton\r\n          onClick={() => handleClick(\"lamp\")}\r\n          title=\"Leds\"\r\n          icon={buttonStatus.lamp ? lampColored : lamp}\r\n          status={buttonStatus.lamp}\r\n        />\r\n        <ControlButton\r\n          onClick={() => handleClick(\"fan\")}\r\n          title=\"Fans\"\r\n          icon={buttonStatus.fan ? fanColored : fan}\r\n          status={buttonStatus.fan}\r\n        />\r\n      </div>\r\n      <div className=\"info-container\">\r\n        <ControlInfo\r\n          infoName=\"Temperature\"\r\n          infoValue=\"sicaklik\"\r\n          infoUnit=\"°\"\r\n          minVal={10}\r\n          maxVal={35}\r\n          icon={temperature}\r\n        />\r\n        <ControlInfo\r\n          infoName=\"Humidity\"\r\n          infoValue=\"nem\"\r\n          infoUnit=\"%\"\r\n          minVal={50}\r\n          maxVal={80}\r\n          icon={humidity}\r\n        />\r\n        <ControlInfo\r\n          infoName=\"Smoke\"\r\n          infoValue=\"gaz\"\r\n          infoUnit=\"ppm\"\r\n          minVal={200}\r\n          maxVal={250}\r\n          icon={smoke}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodemcuControls;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nimport \"./App.scss\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport HomePage from \"./pages/homepage/HomePage\";\r\nimport NodemcuCharts from \"./pages/nodemcu-charts/NodemcuCharts\";\r\nimport NodemcuControls from \"./pages/nodemcu-controls/NodemcuControls\";\r\n\r\nconst App = ({ history }) => {\r\n  const [selectedButton, setSelectedButton] = useState(\"\");\r\n  //Getting which button selected from sidebar\r\n  useEffect(() => {\r\n    //Getting pathname and setting button that selected\r\n    setSelectedButton(\r\n      history.location.pathname.replace(process.env.PUBLIC_URL, \"\").slice(1)\r\n    );\r\n  }, [history.location.pathname]);\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Sidebar selectedButton={selectedButton} />\r\n      <div className=\"app-content-container\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\"}\r\n            render={() => {\r\n              return <HomePage />;\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/kontroller\"}\r\n            render={() => {\r\n              return <NodemcuControls />;\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/grafikler\"}\r\n            render={() => {\r\n              return <NodemcuCharts />;\r\n            }}\r\n          />\r\n          <Route\r\n            render={() => <Redirect to={process.env.PUBLIC_URL + \"/\"} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}